package webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.14.redhat-1
 * 2016-05-19T18:31:30.528+02:00
 * Generated source version: 2.7.14.redhat-1
 * 
 */
@WebService(targetNamespace = "http://webservices/", name = "ManageLocals")
@XmlSeeAlso({ObjectFactory.class})
public interface ManageLocals {

    @WebMethod
    @RequestWrapper(localName = "getStreets", targetNamespace = "http://webservices/", className = "webservices.GetStreets")
    @ResponseWrapper(localName = "getStreetsResponse", targetNamespace = "http://webservices/", className = "webservices.GetStreetsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> getStreets();

    @WebMethod
    @RequestWrapper(localName = "validateLocal", targetNamespace = "http://webservices/", className = "webservices.ValidateLocal")
    @ResponseWrapper(localName = "validateLocalResponse", targetNamespace = "http://webservices/", className = "webservices.ValidateLocalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean validateLocal(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getLevelsOfCharacteristics", targetNamespace = "http://webservices/", className = "webservices.GetLevelsOfCharacteristics")
    @ResponseWrapper(localName = "getLevelsOfCharacteristicsResponse", targetNamespace = "http://webservices/", className = "webservices.GetLevelsOfCharacteristicsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> getLevelsOfCharacteristics();

    @WebMethod
    @RequestWrapper(localName = "removeLocal", targetNamespace = "http://webservices/", className = "webservices.RemoveLocal")
    @ResponseWrapper(localName = "removeLocalResponse", targetNamespace = "http://webservices/", className = "webservices.RemoveLocalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean removeLocal(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getLocals", targetNamespace = "http://webservices/", className = "webservices.GetLocals")
    @ResponseWrapper(localName = "getLocalsResponse", targetNamespace = "http://webservices/", className = "webservices.GetLocalsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservices.Local> getLocals(
        @WebParam(name = "arg0", targetNamespace = "")
        webservices.Local arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.util.List<java.lang.Boolean> arg1
    ) throws MissingSearchCriteriaError_Exception;

    @WebMethod
    @RequestWrapper(localName = "getLogByDateAndTypeEvent", targetNamespace = "http://webservices/", className = "webservices.GetLogByDateAndTypeEvent")
    @ResponseWrapper(localName = "getLogByDateAndTypeEventResponse", targetNamespace = "http://webservices/", className = "webservices.GetLogByDateAndTypeEventResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservices.LogEvent> getLogByDateAndTypeEvent(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1
    );

    @WebMethod
    @RequestWrapper(localName = "getTypesOfLocals", targetNamespace = "http://webservices/", className = "webservices.GetTypesOfLocals")
    @ResponseWrapper(localName = "getTypesOfLocalsResponse", targetNamespace = "http://webservices/", className = "webservices.GetTypesOfLocalsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> getTypesOfLocals();

    @WebMethod
    @RequestWrapper(localName = "getLogByDate", targetNamespace = "http://webservices/", className = "webservices.GetLogByDate")
    @ResponseWrapper(localName = "getLogByDateResponse", targetNamespace = "http://webservices/", className = "webservices.GetLogByDateResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservices.LogEvent> getLogByDate(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getLogTypeEvents", targetNamespace = "http://webservices/", className = "webservices.GetLogTypeEvents")
    @ResponseWrapper(localName = "getLogTypeEventsResponse", targetNamespace = "http://webservices/", className = "webservices.GetLogTypeEventsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> getLogTypeEvents();

    @WebMethod
    @RequestWrapper(localName = "getCharacteristicsByTypeLocal", targetNamespace = "http://webservices/", className = "webservices.GetCharacteristicsByTypeLocal")
    @ResponseWrapper(localName = "getCharacteristicsByTypeLocalResponse", targetNamespace = "http://webservices/", className = "webservices.GetCharacteristicsByTypeLocalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<webservices.Characteristic> getCharacteristicsByTypeLocal(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getLocalById", targetNamespace = "http://webservices/", className = "webservices.GetLocalById")
    @ResponseWrapper(localName = "getLocalByIdResponse", targetNamespace = "http://webservices/", className = "webservices.GetLocalByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservices.Local getLocalById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    ) throws LocalNotFoundError_Exception;

    @WebMethod
    @RequestWrapper(localName = "newLocal", targetNamespace = "http://webservices/", className = "webservices.NewLocal")
    @ResponseWrapper(localName = "newLocalResponse", targetNamespace = "http://webservices/", className = "webservices.NewLocalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public webservices.Local newLocal(
        @WebParam(name = "arg0", targetNamespace = "")
        webservices.Local arg0
    ) throws MissingNameError_Exception, WrongTypeLocalError_Exception, DuplicatedLocalError_Exception, WrongAddressError_Exception, WrongAccessibilityError_Exception;
}
